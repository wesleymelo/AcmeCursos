//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AcmeCursos.Presentation.CursoServiceRemoto {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CursoDTO", Namespace="http://schemas.datacontract.org/2004/07/AcmeCursos.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class CursoDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DataLimiteInscricaoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescricaoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AcmeCursos.Presentation.CursoServiceRemoto.ProfessorDTO> ProfessoresField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DataLimiteInscricao {
            get {
                return this.DataLimiteInscricaoField;
            }
            set {
                if ((this.DataLimiteInscricaoField.Equals(value) != true)) {
                    this.DataLimiteInscricaoField = value;
                    this.RaisePropertyChanged("DataLimiteInscricao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descricao {
            get {
                return this.DescricaoField;
            }
            set {
                if ((object.ReferenceEquals(this.DescricaoField, value) != true)) {
                    this.DescricaoField = value;
                    this.RaisePropertyChanged("Descricao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AcmeCursos.Presentation.CursoServiceRemoto.ProfessorDTO> Professores {
            get {
                return this.ProfessoresField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessoresField, value) != true)) {
                    this.ProfessoresField = value;
                    this.RaisePropertyChanged("Professores");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfessorDTO", Namespace="http://schemas.datacontract.org/2004/07/AcmeCursos.Service.DTO")]
    [System.SerializableAttribute()]
    public partial class ProfessorDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO> CursosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SobrenomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitulacaoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO> Cursos {
            get {
                return this.CursosField;
            }
            set {
                if ((object.ReferenceEquals(this.CursosField, value) != true)) {
                    this.CursosField = value;
                    this.RaisePropertyChanged("Cursos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sobrenome {
            get {
                return this.SobrenomeField;
            }
            set {
                if ((object.ReferenceEquals(this.SobrenomeField, value) != true)) {
                    this.SobrenomeField = value;
                    this.RaisePropertyChanged("Sobrenome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Titulacao {
            get {
                return this.TitulacaoField;
            }
            set {
                if ((object.ReferenceEquals(this.TitulacaoField, value) != true)) {
                    this.TitulacaoField = value;
                    this.RaisePropertyChanged("Titulacao");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcmeCursos.Service.Exceptions")]
    [System.SerializableAttribute()]
    public partial class ServiceException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MensagemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mensagem {
            get {
                return this.MensagemField;
            }
            set {
                if ((object.ReferenceEquals(this.MensagemField, value) != true)) {
                    this.MensagemField = value;
                    this.RaisePropertyChanged("Mensagem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CursoServiceRemoto.ICursoService")]
    public interface ICursoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICursoService/GetAll", ReplyAction="http://tempuri.org/ICursoService/GetAllResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AcmeCursos.Presentation.CursoServiceRemoto.ServiceException), Action="http://tempuri.org/ICursoService/GetAllServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcmeCursos.Service.Exceptions")]
        System.Collections.Generic.List<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICursoService/GetAll", ReplyAction="http://tempuri.org/ICursoService/GetAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO>> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICursoService/GetAllWithProfessores", ReplyAction="http://tempuri.org/ICursoService/GetAllWithProfessoresResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AcmeCursos.Presentation.CursoServiceRemoto.ServiceException), Action="http://tempuri.org/ICursoService/GetAllWithProfessoresServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcmeCursos.Service.Exceptions")]
        System.Collections.Generic.List<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO> GetAllWithProfessores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICursoService/GetAllWithProfessores", ReplyAction="http://tempuri.org/ICursoService/GetAllWithProfessoresResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO>> GetAllWithProfessoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICursoService/Find", ReplyAction="http://tempuri.org/ICursoService/FindResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AcmeCursos.Presentation.CursoServiceRemoto.ServiceException), Action="http://tempuri.org/ICursoService/FindServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcmeCursos.Service.Exceptions")]
        AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO Find(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICursoService/Find", ReplyAction="http://tempuri.org/ICursoService/FindResponse")]
        System.Threading.Tasks.Task<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO> FindAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICursoService/FindWithProfessores", ReplyAction="http://tempuri.org/ICursoService/FindWithProfessoresResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AcmeCursos.Presentation.CursoServiceRemoto.ServiceException), Action="http://tempuri.org/ICursoService/FindWithProfessoresServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcmeCursos.Service.Exceptions")]
        AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO FindWithProfessores(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICursoService/FindWithProfessores", ReplyAction="http://tempuri.org/ICursoService/FindWithProfessoresResponse")]
        System.Threading.Tasks.Task<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO> FindWithProfessoresAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICursoService/Delete", ReplyAction="http://tempuri.org/ICursoService/DeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AcmeCursos.Presentation.CursoServiceRemoto.ServiceException), Action="http://tempuri.org/ICursoService/DeleteServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcmeCursos.Service.Exceptions")]
        bool Delete(AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO curso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICursoService/Delete", ReplyAction="http://tempuri.org/ICursoService/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO curso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICursoService/Add", ReplyAction="http://tempuri.org/ICursoService/AddResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AcmeCursos.Presentation.CursoServiceRemoto.ServiceException), Action="http://tempuri.org/ICursoService/AddServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcmeCursos.Service.Exceptions")]
        bool Add(AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO curso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICursoService/Add", ReplyAction="http://tempuri.org/ICursoService/AddResponse")]
        System.Threading.Tasks.Task<bool> AddAsync(AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO curso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICursoService/Update", ReplyAction="http://tempuri.org/ICursoService/UpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AcmeCursos.Presentation.CursoServiceRemoto.ServiceException), Action="http://tempuri.org/ICursoService/UpdateServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcmeCursos.Service.Exceptions")]
        bool Update(AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO curso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICursoService/Update", ReplyAction="http://tempuri.org/ICursoService/UpdateResponse")]
        System.Threading.Tasks.Task<bool> UpdateAsync(AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO curso);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICursoService/GetAllByProfessor", ReplyAction="http://tempuri.org/ICursoService/GetAllByProfessorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AcmeCursos.Presentation.CursoServiceRemoto.ServiceException), Action="http://tempuri.org/ICursoService/GetAllByProfessorServiceExceptionFault", Name="ServiceException", Namespace="http://schemas.datacontract.org/2004/07/AcmeCursos.Service.Exceptions")]
        System.Collections.Generic.List<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO> GetAllByProfessor(int idProfessor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICursoService/GetAllByProfessor", ReplyAction="http://tempuri.org/ICursoService/GetAllByProfessorResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO>> GetAllByProfessorAsync(int idProfessor);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICursoServiceChannel : AcmeCursos.Presentation.CursoServiceRemoto.ICursoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CursoServiceClient : System.ServiceModel.ClientBase<AcmeCursos.Presentation.CursoServiceRemoto.ICursoService>, AcmeCursos.Presentation.CursoServiceRemoto.ICursoService {
        
        public CursoServiceClient() {
        }
        
        public CursoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CursoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CursoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CursoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO> GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO>> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public System.Collections.Generic.List<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO> GetAllWithProfessores() {
            return base.Channel.GetAllWithProfessores();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO>> GetAllWithProfessoresAsync() {
            return base.Channel.GetAllWithProfessoresAsync();
        }
        
        public AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO Find(int id) {
            return base.Channel.Find(id);
        }
        
        public System.Threading.Tasks.Task<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO> FindAsync(int id) {
            return base.Channel.FindAsync(id);
        }
        
        public AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO FindWithProfessores(int id) {
            return base.Channel.FindWithProfessores(id);
        }
        
        public System.Threading.Tasks.Task<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO> FindWithProfessoresAsync(int id) {
            return base.Channel.FindWithProfessoresAsync(id);
        }
        
        public bool Delete(AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO curso) {
            return base.Channel.Delete(curso);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO curso) {
            return base.Channel.DeleteAsync(curso);
        }
        
        public bool Add(AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO curso) {
            return base.Channel.Add(curso);
        }
        
        public System.Threading.Tasks.Task<bool> AddAsync(AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO curso) {
            return base.Channel.AddAsync(curso);
        }
        
        public bool Update(AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO curso) {
            return base.Channel.Update(curso);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAsync(AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO curso) {
            return base.Channel.UpdateAsync(curso);
        }
        
        public System.Collections.Generic.List<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO> GetAllByProfessor(int idProfessor) {
            return base.Channel.GetAllByProfessor(idProfessor);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AcmeCursos.Presentation.CursoServiceRemoto.CursoDTO>> GetAllByProfessorAsync(int idProfessor) {
            return base.Channel.GetAllByProfessorAsync(idProfessor);
        }
    }
}
